#include <vector>#include <iostream>#include <array>#include "DynamicArray.h"using namespace std;class DynamicStringArray{		    //INSTANCE VARIABLES    int size;    T* dynamicArray;        // CONTRUCTORS    DynamicStringArray(){        dynamicArray = NULL;        size = 0;    }            DynamicStringArray(const DynamicStringArray& arrD ){ // Copy constructor            size  = arrD.size;        dynamicArray = new T[size];        for (int i = 0; i < size; i++){            dynamicArray[i] = arrD.dynamicArray[i];        }    }        //DESTRUCTOR TO DELLOCATE MEMORY    ~DynamicStringArray(){        if (dynamicArray != NULL){            dynamicArray = NULL;            delete [] dynamicArray;        }        }    //GIVES THE SIZE OF THE ARRAY    int getSize(){        return size;    }    //PUSHING THE VALUES TO LAST INDEX IN THE ARRAY    void addEntry(const T& str){        size = size + 1;        T* new_arr = new T[size];            for(int i = 0; i < size - 1; i++){            new_arr[i] = dynamicArray[i] ;        }        new_arr[size - 1] = str;        delete [] dynamicArray;        dynamicArray = new_arr;        }    //POPING THE LAST VALUE FROM THE ARRAY    bool deleteEntry(const T& str){        int i;        int index = -1;        for ( i = 0; i < size ; i++){            if(dynamicArray[i] == str){                            index = i;                break;            }        }        if (index == -1) {            return false;        }            size = size - 1;            T* new_arr = new T[size];        int y = 0;        for(int j = 0; j <= size; j++){            if(j != index){                new_arr[y] = dynamicArray[j];                y++;            }        }        delete[] dynamicArray;        dynamicArray = new_arr;        return true;    }    //GET THE VALUE FROM THE ARRAY    T getEntry(int n){        return dynamicArray[n - 1];    }        T* printArray(){       return dynamicArray;    }        }